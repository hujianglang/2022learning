2022/2/12
solidity开发工具：
1，Node.js 安装
2，Solidity编译器，作为npm软件包
3，visual studio插件安装
4，ethereum.js-testrpc未安装成功，修改为以下的：


安装Solidity编译器：
npm install -g solc
solcjs -V

安装以太坊客户端：
npm install -g ethereumjs-testrpc
安装失败，修改为以下工具：
npm install -g ganache-cli

备注：环境变量设置后，重启生效


学习教程：
https://www.youtube.com/watch?v=ZuUbiOvs7Gw

另外可以使用remix学习
https://remix.ethereum.org

IDE：Remix(online),Hardhat(JS),Truffle(JS),Brownie(Python)

example1:
// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0

/*
* @title Storage
* @dev Store & retrieve value in a variable
*/
contract Storage{
    uint256 number;
    /*
    * @dev Store value in variable
    * @param num value to store
    */
    function store(uint256 num) public 
    {
        number = num;
    }

    /**
    * @dev Return value
    * @return value of 'number'
     */

     function retrieve() public view returns(uint256){
         return number;
     }
}

example2:
// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

/**
* @title Owner
* @dev Set & change owner
 */

 contract Owner{
     address private owner;
     //event for EVM logging
     event OwnerSet(address indexed oldOwner, address indexed newOwner);

     modifier isOwner(){
         require(msg.sender == owner, "Caller is not owner");
         _;
     }

     /**
     * @dev Set contract deployer as owner
      */
      constructor(){
          owner = msg.sender;
          emit OwnerSet(address(0),owner);   
         //todo  emit OwnerSet 是发送到哪里的呢？
      }

      function changeOwner(address newOwner) public isOwner{
          emit OwnerSet(owner, newOwner);
          owner = newOwner;
      }

      function getOwner() external view returns(address){
          return owner;
      }
 }

solidity官方文档参考：
https://docs.soliditylang.org/en/v0.8.11/index.html

范例：ERC20 token
参考文档：https://eips.ethereum.org/EIPS/eip-20
通用发币代码（Fungible Tokens)
function totalSupply() public view returns (uint256);
function balanceOf(address _Owner) public view returns (uint256 balance);
function transfer(address _to, uint256 _value) public returns (bool success);
function transferFrom(address _from , address _to, uint256 _value) public returns (bool success);
function approve(address _spender, uint256 _value) public returns (bool success);
function allowance(address _owner, address _spender) public view returns(uint256 remaining);
event Transfer(address indexed _from, address indexed _to, uint256 _value);
event Approval(address indexed _owner, address  indexed _spender, uint256 _value);

